#!/bin/bash


umask 002


export PATH="/usr/local/games/minecraft/bin:$PATH"


export PROG_DIR="/usr/local/games/minecraft/overviewer"
export CFG_DIR="/usr/local/games/minecraft/etc"
export BUILD_DIR="/usr/local/games/minecraft/maps/build"
export WWW_DIR="/usr/local/games/minecraft/maps/www"
export LOG="/usr/local/games/minecraft/logs/maps"

export server=""
export verbose=""
export force=""


usage () {
    cat << EOUSAGE
make-maps -s <server> [-f] [-v]
-s <server>     name the server to map
-f              force render
-v              verbose
EOUSAGE
}


log () {
    local msg="$1"

    msg="$(date '+%Y-%m-%d %H:%M:%S') $msg"

    echo "#####################################################################################" >> $LOG
    echo "$msg" >> $LOG

    if [ "$verbose" = "yes" ]; then
        echo $msg
    fi
}


make_map () {

    local cfg="$1"
    local map_name="$2"

    if [ ! -s "$cfg" ]; then
        log "configuration '$cfg' does not exist"
        exit -1
    fi

    cd "$PROG_DIR"

    log "begin generating map - cfg: $(basename $cfg)"
    if ! ./overviewer.py $force --config "$cfg" &>> $LOG; then
        log "overviewer failed"
        exit -1
    fi

    log "verifying permissions"
    find $BUILD_DIR/$map_name -type d | xargs chmod -v 755 &>> $LOG
    find $BUILD_DIR/$map_name -type f | xargs chmod -v 644 &>> $LOG

    log "moving map into place"
    rsync --verbose --archive --inplace --whole-file --delete-after "$BUILD_DIR/$map_name" "$WWW_DIR/" &>> $LOG

}


while getopts "s:fvh" opt; do
    case "$opt" in
        s)
            server="$OPTARG"
            ;;
        f)
            force="--check-tiles"
            ;;
        v)
            verbose="yes"
            ;;
        h)
            usage
            exit -1
            ;;
    esac
done


if [ -z "$server" ]; then
    echo "ERROR: no server specified"
    exit -1
fi


log "make-maps starting - server: $server"

log "taking server snapshot..."
if ! mcctl snapshot "$server" &>> $LOG; then
    exit -1
fi

for region in over under nether; do
    cfg="$CFG_DIR/OV-$server-$region.txt"
    map_name="$server-$region"
    make_map "$cfg" "$map_name"
done

log "make-maps exiting"

exit

